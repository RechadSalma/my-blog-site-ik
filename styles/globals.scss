// ! iK this sass bootstrap is a setup for Outer-grid : header / main / footer
//  You will need to create the component/element first & add the id's within
// Outer-grid uses css grid & consist of header / main / footer

@import "./customBootstrap.scss";
// @import "../components/OuterGrid.scss";
@import url("https://fonts.googleapis.com/css2?family=Rubik+Moonrocks&display=swap");
// font-family: 'Rubik Moonrocks', cursive;

// iK? xx-small small phones (above 360px)
// X-Small devices (portrait phones, less than 576px)
// No media query for `xs` since this is the default in Bootstrap
// No media query necessary for xs breakpoint as it's effectively `@media (min-width: 0) { ... }`

// #####################################################
// x-Small devices (small phones, 320px and up)
STARTING BREAKPOINT
// #####################################################
*,
*::before,
*::after {
  box-sizing: border-box;
}

// * to get react component full 100 width & height of the screen
root,
html,
body,
#root,
#root > div#OuterGrid {
  height: 100%;
  width: 100%;
  margin: 0;
  font-family: cursive;
}

// * Setup up Outer-grid of the screen (OuterGrid.tsx component)
#OuterGrid {
  display: grid;
  grid-template-columns: 100%; // 1fr is a bit dodgy when it comes to navbar sandwich & does not take the 100% width like it is suppose to
  grid-template-rows: 210px minmax(max-content, 1fr) 60px;
  grid-template-areas:
    "OG-header"
    "OG-main"
    "OG-footer";
  width: 100%;
  height: 100vh;

  // background-color: aquamarine;

  #OuterGrid-header {
    grid-area: OG-header;

    // background-color: red;
  }

  #OuterGrid-main {
    grid-area: OG-main;
    overflow-x: auto;

    width: 93%;
    margin: 7px auto; // center the box

    background-color: #f1f8ff;
  }

  // will not be display until at bigger screen size
  #OuterGrid-aside {
    grid-area: OG-aside;
    display: none;

    background-color: pink;
  }

  #OuterGrid-footer {
    grid-area: OG-footer;

    // background-color: yellow;
  }
}

// ! iK Beware I notice media query does not work accordingly unless your elements have higher specificity than < 576px. Not sure if this is a one off or not?
// * However the other breakpoints are working fine with each other so you do not have to compete for specificity there

// #####################################################
// Small devices (landscape phones, 576px and up)
// #####################################################
@include media-breakpoint-up(sm) {
  #OuterGrid {
    grid-template-columns: 1fr 5fr 2fr 1fr;
    grid-template-rows: 205px 1fr 75px;
    grid-template-areas:
      "OG-header OG-header OG-header OG-header"
      ". OG-main OG-aside ."
      "OG-footer OG-footer OG-footer OG-footer";

    #OuterGrid-main {
      margin: 10px auto; // center the box
    }

    #OuterGrid-aside {
      display: block;

      width: 90%;
      margin: 10px 0; // keeping box to the left because it looks better
    }
  }
}

// #####################################################
// Medium devices (tablets, 768px and up)
// #####################################################
// @include media-breakpoint-up(md) {
// }

// #####################################################
// Large devices (desktops, 992px and up)
// #####################################################
@include media-breakpoint-up(lg) {
  #OuterGrid {
    grid-template-columns: 2fr 7fr 3fr 2fr;
    grid-template-rows: 150px 1fr 75px;
    grid-template-areas:
      "OG-header OG-header OG-header OG-header"
      ". OG-main OG-aside ."
      "OG-footer OG-footer OG-footer OG-footer";
  }
}

// #####################################################
// X-Large devices (large desktops, 1200px and up)
// #####################################################
// @include media-breakpoint-up(xl) {
// }

// #####################################################
// XX-Large devices (larger desktops, 1400px and up)
// #####################################################
// @include media-breakpoint-up(xxl) {
// }
